package com.studious.display;

import com.studious.dao.LessonDAO;
import com.studious.dao.QuestionDAO;
import com.studious.dao.QuestionOfTestDAO;
import com.studious.dao.TeacherDAO;
import com.studious.dao.TestDAO;
import com.studious.entity.Lesson;
import com.studious.entity.Question;
import com.studious.entity.QuestionOfTest;
import com.studious.entity.Teacher;
import com.studious.entity.Test;
import com.studious.utils.Auth;
import com.studious.utils.MsgBox;
import java.awt.HeadlessException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Phan Qui Duc
 */
public class TestManagement extends javax.swing.JFrame {

    Integer time = 0;
    
    JFrame window;
    
    public TestManagement () {
        initComponents();
        init();
    }
    
    public TestManagement (JFrame window) {
        initComponents();
        this.window = window;
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBackground = new javax.swing.JPanel();
        lblLogo = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        tabs = new javax.swing.JTabbedPane();
        pnlManage = new javax.swing.JPanel();
        lblTestType = new javax.swing.JLabel();
        lblTitleTest = new javax.swing.JLabel();
        lblSubject = new javax.swing.JLabel();
        cboSubject = new javax.swing.JComboBox<>();
        lblAdvancedSearch = new javax.swing.JLabel();
        pnlAdvancedSearch = new javax.swing.JPanel();
        lblGrade = new javax.swing.JLabel();
        cboGrade = new javax.swing.JComboBox<>();
        lblLesson = new javax.swing.JLabel();
        cboLesson = new javax.swing.JComboBox<>();
        btnSearch = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQuestion = new javax.swing.JTable();
        pnlQuestionList = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblQuestionList = new javax.swing.JTable();
        btnDeleteQuestion = new javax.swing.JButton();
        btnAddQuestion = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnInsert = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        lblQuestionList = new javax.swing.JLabel();
        txtTitleTest = new javax.swing.JTextField();
        lblTestType1 = new javax.swing.JLabel();
        cboTestType = new javax.swing.JComboBox<>();
        txtTestID = new javax.swing.JTextField();
        pnlList = new javax.swing.JPanel();
        lblTestTypeList = new javax.swing.JLabel();
        cboTestTypeList = new javax.swing.JComboBox<>();
        lblSubjectList = new javax.swing.JLabel();
        cboSubjectList = new javax.swing.JComboBox<>();
        btnSearchList = new javax.swing.JButton();
        txtSearchList = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblGridView = new javax.swing.JTable();
        jToolBar = new javax.swing.JToolBar();
        btnHome = new javax.swing.JButton();
        btnPersonalInfo = new javax.swing.JButton();
        btnLesson1 = new javax.swing.JButton();
        btnTest = new javax.swing.JButton();
        btnStatistic = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        pnlBackground.setBackground(new java.awt.Color(232, 255, 183));

        lblLogo.setBackground(new java.awt.Color(232, 255, 183));
        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/studious/icons/Studious-255x68.png"))); // NOI18N

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(47, 106, 1));
        lblTitle.setText("QUẢN LÝ BÀI THI THỬ");

        tabs.setBackground(new java.awt.Color(255, 255, 255));

        pnlManage.setBackground(new java.awt.Color(255, 255, 255));

        lblTestType.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTestType.setText("Mã bài thi:");
        lblTestType.setToolTipText("");

        lblTitleTest.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTitleTest.setText("Tiêu đề:");
        lblTitleTest.setToolTipText("");

        lblSubject.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblSubject.setText("Môn:");
        lblSubject.setToolTipText("");

        cboSubject.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSubjectActionPerformed(evt);
            }
        });

        lblAdvancedSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblAdvancedSearch.setText("Tìm kiếm mở rộng:");
        lblAdvancedSearch.setToolTipText("");

        pnlAdvancedSearch.setBackground(new java.awt.Color(255, 255, 255));
        pnlAdvancedSearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblGrade.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblGrade.setText("Khối:");
        lblGrade.setToolTipText("");

        cboGrade.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboGrade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10", "11", "12" }));
        cboGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboGradeActionPerformed(evt);
            }
        });

        lblLesson.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblLesson.setText("Bài học:");
        lblLesson.setToolTipText("");

        cboLesson.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboLesson.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hàm Logarit" }));
        cboLesson.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboLessonItemStateChanged(evt);
            }
        });
        cboLesson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLessonActionPerformed(evt);
            }
        });

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/studious/icons/icons8-search-24.png"))); // NOI18N
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        txtSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout pnlAdvancedSearchLayout = new javax.swing.GroupLayout(pnlAdvancedSearch);
        pnlAdvancedSearch.setLayout(pnlAdvancedSearchLayout);
        pnlAdvancedSearchLayout.setHorizontalGroup(
            pnlAdvancedSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAdvancedSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAdvancedSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblGrade)
                    .addComponent(lblLesson))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addGroup(pnlAdvancedSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlAdvancedSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cboLesson, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlAdvancedSearchLayout.createSequentialGroup()
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        pnlAdvancedSearchLayout.setVerticalGroup(
            pnlAdvancedSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdvancedSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAdvancedSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGrade)
                    .addComponent(cboGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAdvancedSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLesson)
                    .addComponent(cboLesson, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAdvancedSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSearch)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblQuestion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã câu hỏi", "Nội dung", "Đáp án đúng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblQuestion.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblQuestion);

        pnlQuestionList.setBackground(new java.awt.Color(255, 255, 255));

        tblQuestionList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã câu hỏi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblQuestionList.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblQuestionList);

        javax.swing.GroupLayout pnlQuestionListLayout = new javax.swing.GroupLayout(pnlQuestionList);
        pnlQuestionList.setLayout(pnlQuestionListLayout);
        pnlQuestionListLayout.setHorizontalGroup(
            pnlQuestionListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuestionListLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlQuestionListLayout.setVerticalGroup(
            pnlQuestionListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        btnDeleteQuestion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDeleteQuestion.setText("Xóa câu hỏi");
        btnDeleteQuestion.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDeleteQuestion.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnDeleteQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteQuestionActionPerformed(evt);
            }
        });

        btnAddQuestion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAddQuestion.setText("Thêm câu hỏi");
        btnAddQuestion.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnAddQuestion.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnAddQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddQuestionActionPerformed(evt);
            }
        });

        btnNew.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/studious/icons/icons8-reset-24.png"))); // NOI18N
        btnNew.setText("Tạo mới");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnInsert.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnInsert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/studious/icons/icons8-new-copy-24.png"))); // NOI18N
        btnInsert.setText("Thêm");
        btnInsert.setMaximumSize(new java.awt.Dimension(87, 26));
        btnInsert.setMinimumSize(new java.awt.Dimension(87, 26));
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/studious/icons/icons8-pencil-24 (1).png"))); // NOI18N
        btnEdit.setText("Sửa");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/studious/icons/icons8-available-updates-24.png"))); // NOI18N
        btnUpdate.setText("Cập nhật");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/studious/icons/icons8-bin-24.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnFirst.setText("|<");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrevious.setText("<<");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnNext.setText(">>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setText(">|");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        lblQuestionList.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblQuestionList.setText("Danh sách câu hỏi bài thi:");

        txtTitleTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTitleTestActionPerformed(evt);
            }
        });

        lblTestType1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTestType1.setText("Loại bài thi:");
        lblTestType1.setToolTipText("");

        cboTestType.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboTestType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "15 Phút", "45 Phút", "60 Phút", "THPTQG" }));
        cboTestType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTestTypeItemStateChanged(evt);
            }
        });
        cboTestType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTestTypeActionPerformed(evt);
            }
        });

        txtTestID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTestIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlManageLayout = new javax.swing.GroupLayout(pnlManage);
        pnlManage.setLayout(pnlManageLayout);
        pnlManageLayout.setHorizontalGroup(
            pnlManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlManageLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(pnlManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlManageLayout.createSequentialGroup()
                        .addGroup(pnlManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblTestType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTitleTest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(74, 74, 74)
                        .addGroup(pnlManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtTitleTest, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                            .addComponent(txtTestID))
                        .addGap(49, 49, 49)
                        .addGroup(pnlManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlManageLayout.createSequentialGroup()
                                .addComponent(lblSubject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(74, 74, 74))
                            .addGroup(pnlManageLayout.createSequentialGroup()
                                .addComponent(lblTestType1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(39, 39, 39)))
                        .addGroup(pnlManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboTestType, 0, 289, Short.MAX_VALUE)
                            .addComponent(cboSubject, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(pnlManageLayout.createSequentialGroup()
                        .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlManageLayout.createSequentialGroup()
                        .addComponent(btnNew)
                        .addGap(18, 18, 18)
                        .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlManageLayout.createSequentialGroup()
                        .addGroup(pnlManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlManageLayout.createSequentialGroup()
                                .addGroup(pnlManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(pnlAdvancedSearch, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(pnlManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnDeleteQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAddQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(lblAdvancedSearch))
                        .addGap(18, 18, 18)
                        .addGroup(pnlManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblQuestionList)
                            .addComponent(pnlQuestionList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(27, 27, 27))
        );
        pnlManageLayout.setVerticalGroup(
            pnlManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlManageLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(pnlManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTestType1)
                        .addComponent(cboTestType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTestID, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                    .addComponent(lblTestType))
                .addGap(18, 18, 18)
                .addGroup(pnlManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitleTest)
                    .addGroup(pnlManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTitleTest, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                        .addComponent(lblSubject)
                        .addComponent(cboSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39)
                .addGroup(pnlManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAdvancedSearch)
                    .addComponent(lblQuestionList))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(pnlManageLayout.createSequentialGroup()
                            .addComponent(btnAddQuestion)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnDeleteQuestion))
                        .addGroup(pnlManageLayout.createSequentialGroup()
                            .addComponent(pnlAdvancedSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(pnlQuestionList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(pnlManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNew)
                    .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addGap(18, 18, 18))
        );

        tabs.addTab("Quản lí", pnlManage);

        pnlList.setBackground(new java.awt.Color(255, 255, 255));

        lblTestTypeList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTestTypeList.setText("Loại bài thi:");
        lblTestTypeList.setToolTipText("");

        cboTestTypeList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboTestTypeList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "15 Phút", "45 Phút", "60 Phút", "THPTQG" }));
        cboTestTypeList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTestTypeListItemStateChanged(evt);
            }
        });
        cboTestTypeList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTestTypeListActionPerformed(evt);
            }
        });

        lblSubjectList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblSubjectList.setText("Môn:");
        lblSubjectList.setToolTipText("");

        cboSubjectList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboSubjectList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Toán" }));
        cboSubjectList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboSubjectListItemStateChanged(evt);
            }
        });
        cboSubjectList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSubjectListActionPerformed(evt);
            }
        });

        btnSearchList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/studious/icons/icons8-search-24.png"))); // NOI18N
        btnSearchList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchListActionPerformed(evt);
            }
        });

        txtSearchList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        tblGridView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã đề thi", "Tên bài thi", "Thời gian", "Ngày tạo", "Người tạo", "Số lượng câu hỏi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGridView.getTableHeader().setReorderingAllowed(false);
        tblGridView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGridViewMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblGridView);

        javax.swing.GroupLayout pnlListLayout = new javax.swing.GroupLayout(pnlList);
        pnlList.setLayout(pnlListLayout);
        pnlListLayout.setHorizontalGroup(
            pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlListLayout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addContainerGap())
                    .addGroup(pnlListLayout.createSequentialGroup()
                        .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlListLayout.createSequentialGroup()
                                .addComponent(btnSearchList, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSearchList))
                            .addGroup(pnlListLayout.createSequentialGroup()
                                .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblSubjectList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblTestTypeList, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))
                                .addGap(29, 29, 29)
                                .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cboTestTypeList, 0, 175, Short.MAX_VALUE)
                                    .addComponent(cboSubjectList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(550, 550, 550))))
        );
        pnlListLayout.setVerticalGroup(
            pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTestTypeList)
                    .addComponent(cboTestTypeList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSubjectList, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboSubjectList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSearchList, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(btnSearchList, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123))
        );

        tabs.addTab("Danh sách", pnlList);

        jToolBar.setBackground(new java.awt.Color(232, 255, 183));
        jToolBar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(232, 255, 183)));
        jToolBar.setFloatable(false);
        jToolBar.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar.setRollover(true);

        btnHome.setBackground(new java.awt.Color(232, 255, 183));
        btnHome.setForeground(new java.awt.Color(232, 255, 183));
        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/studious/icons/home.png"))); // NOI18N
        btnHome.setToolTipText("Màn hình chính");
        btnHome.setFocusable(false);
        btnHome.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnHome.setMaximumSize(new java.awt.Dimension(45, 45));
        btnHome.setMinimumSize(new java.awt.Dimension(45, 45));
        btnHome.setPreferredSize(new java.awt.Dimension(45, 45));
        btnHome.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });
        jToolBar.add(btnHome);

        btnPersonalInfo.setBackground(new java.awt.Color(232, 255, 183));
        btnPersonalInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/studious/icons/account.png"))); // NOI18N
        btnPersonalInfo.setToolTipText("Thông tin cá nhân");
        btnPersonalInfo.setFocusable(false);
        btnPersonalInfo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPersonalInfo.setMaximumSize(new java.awt.Dimension(45, 45));
        btnPersonalInfo.setMinimumSize(new java.awt.Dimension(45, 45));
        btnPersonalInfo.setPreferredSize(new java.awt.Dimension(45, 45));
        btnPersonalInfo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPersonalInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPersonalInfoActionPerformed(evt);
            }
        });
        jToolBar.add(btnPersonalInfo);

        btnLesson1.setBackground(new java.awt.Color(232, 255, 183));
        btnLesson1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/studious/icons/lessons.png"))); // NOI18N
        btnLesson1.setToolTipText("Bài học");
        btnLesson1.setFocusable(false);
        btnLesson1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLesson1.setMaximumSize(new java.awt.Dimension(45, 45));
        btnLesson1.setMinimumSize(new java.awt.Dimension(45, 45));
        btnLesson1.setPreferredSize(new java.awt.Dimension(45, 45));
        btnLesson1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLesson1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLesson1ActionPerformed(evt);
            }
        });
        jToolBar.add(btnLesson1);

        btnTest.setBackground(new java.awt.Color(232, 255, 183));
        btnTest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/studious/icons/mockExam.png"))); // NOI18N
        btnTest.setToolTipText("Thi thử");
        btnTest.setFocusable(false);
        btnTest.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTest.setMaximumSize(new java.awt.Dimension(45, 45));
        btnTest.setMinimumSize(new java.awt.Dimension(45, 45));
        btnTest.setPreferredSize(new java.awt.Dimension(45, 45));
        btnTest.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestActionPerformed(evt);
            }
        });
        jToolBar.add(btnTest);

        btnStatistic.setBackground(new java.awt.Color(232, 255, 183));
        btnStatistic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/studious/icons/statistic.png"))); // NOI18N
        btnStatistic.setToolTipText("Thống kê");
        btnStatistic.setFocusable(false);
        btnStatistic.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnStatistic.setMaximumSize(new java.awt.Dimension(45, 45));
        btnStatistic.setMinimumSize(new java.awt.Dimension(45, 45));
        btnStatistic.setPreferredSize(new java.awt.Dimension(45, 45));
        btnStatistic.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnStatistic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatisticActionPerformed(evt);
            }
        });
        jToolBar.add(btnStatistic);

        btnBack.setBackground(new java.awt.Color(232, 255, 183));
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/studious/icons/back.png"))); // NOI18N
        btnBack.setFocusable(false);
        btnBack.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBack.setMaximumSize(new java.awt.Dimension(45, 45));
        btnBack.setMinimumSize(new java.awt.Dimension(45, 45));
        btnBack.setPreferredSize(new java.awt.Dimension(45, 45));
        btnBack.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jToolBar.add(btnBack);

        btnLogout.setBackground(new java.awt.Color(232, 255, 183));
        btnLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/studious/icons/logout.png"))); // NOI18N
        btnLogout.setToolTipText("Đăng xuất");
        btnLogout.setFocusable(false);
        btnLogout.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLogout.setMaximumSize(new java.awt.Dimension(45, 45));
        btnLogout.setMinimumSize(new java.awt.Dimension(45, 45));
        btnLogout.setPreferredSize(new java.awt.Dimension(45, 45));
        btnLogout.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });
        jToolBar.add(btnLogout);

        javax.swing.GroupLayout pnlBackgroundLayout = new javax.swing.GroupLayout(pnlBackground);
        pnlBackground.setLayout(pnlBackgroundLayout);
        pnlBackgroundLayout.setHorizontalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(lblLogo)
                .addGap(402, 402, 402)
                .addComponent(lblTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 876, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlBackgroundLayout.setVerticalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLogo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String testID;
    private int timeTest;
    private String titleTest;
    private String subject;
    private int grade;
    private int row;
    private String search;
    private Lesson lEntity = new Lesson();
    private LessonDAO lDao = new LessonDAO();
    private TestDAO tDao = new TestDAO();
    private QuestionDAO qDAO = new QuestionDAO();
    private QuestionOfTestDAO qotDAO = new QuestionOfTestDAO();
    private List<QuestionOfTest> qotList = new ArrayList<QuestionOfTest>();
    private int index = -1;

    private void init () {
        setLocationRelativeTo(null);
        fillCboSubject(true);
        fillCboSubjectList(true);
        fillCboGrade();
        fillCboLesson();
        fillTblQuestion(true);
        fillTblTestList("");
        clearForm();
        setValue();
    }

    //hàm cập nhật giá trị đầu vào:
    private void setTime (boolean check) {
        if (check) {
            if (!cboTestType.getSelectedItem().equals("THPTQG")) {
                timeTest = Integer.valueOf(cboTestType.getSelectedItem().toString().substring(0, 2));
            }
            else {
                String subject = (String) cboSubject.getSelectedItem();
                switch (subject) {
                    case "Toán" -> {
                        timeTest = 90;
                    }
                    case "Vật Lý","Hóa Học","Sinh Học","Lịch Sử","Địa Lý","Giáo Dục Công Dân" -> {
                        timeTest = 50;
                    }
                    case "Tiếng Anh" ->
                        timeTest = 50;
                    default ->
                        throw new AssertionError();
                }
            }
        }
        else {
            if (!cboTestTypeList.getSelectedItem().equals("THPTQG")) {
                timeTest = Integer.valueOf(cboTestTypeList.getSelectedItem().toString().substring(0, 2));
            }
            else {
                String subject = (String) cboSubjectList.getSelectedItem();
                switch (subject) {
                    case "Toán" -> {
                        timeTest = 90;
                    }
                    case "Vật Lý","Hóa Học","Sinh Học","Lịch Sử","Địa Lý","Giáo Dục Công Dân" -> {
                        timeTest = 50;
                    }
                    case "Tiếng Anh" ->
                        timeTest = 50;
                    default ->
                        throw new AssertionError();
                }
            }
        }
    }

    private void setValue () {
        testID = txtTestID.getText();
        titleTest = txtTitleTest.getText();
        subject = cboSubject.getSelectedItem().toString();
        search = txtSearch.getText();
        grade = Integer.valueOf(cboGrade.getSelectedItem().toString());
    }

    private void setForm(Test test) {
        cboSubject.setSelectedIndex(cboSubjectList.getSelectedIndex());
        txtTestID.setText(test.getTestID());
        txtTitleTest.setText(test.getTestTitle());
        qotList = qotDAO.selectByTestId(test.getTestID());
        fillTblQuestionOfTest();
        btnDelete.setEnabled(false);
        btnUpdate.setEnabled(false);
        btnInsert.setEnabled(false);
    }
    
    private Test getForm () {
        setValue();
        setTime(true);
        if (titleTest.equals("") || (tblQuestionList.getRowCount() == 0)) {
            return null;
        }
        else {
            Test tEntity = new Test(testID, titleTest, timeTest, subject, grade, "GV1");
            return tEntity;
        }

    }
    
    private void fillToForm() {
        String testID = (String) tblGridView.getValueAt(this.row, 1);
        Test test = tDao.selectById(testID);
        this.setForm(test);
        btnEdit.setEnabled(true);
        tabs.setSelectedIndex(0);
    }

    private void fillCboSubject (boolean check) {
        try {
            DefaultComboBoxModel model = (DefaultComboBoxModel) cboSubject.getModel();
            model.removeAllElements();
            if (check) {
                model.addElement("Toán");
                model.addElement("Vật Lý");
                model.addElement("Hóa Học");
                model.addElement("Sinh Học");
                model.addElement("Ngữ Văn");
                model.addElement("Lịch Sử");
                model.addElement("Địa Lý");
                model.addElement("Giáo Dục Công Dân");
                model.addElement("Tiếng Anh");
            }
            else {
                model.addElement("Toán");
                model.addElement("Vật Lý");
                model.addElement("Hóa Học");
                model.addElement("Sinh Học");
                model.addElement("Lịch Sử");
                model.addElement("Địa Lý");
                model.addElement("Giáo Dục Công Dân");
                model.addElement("Tiếng Anh");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillCboSubjectList (boolean check) {
        try {
            DefaultComboBoxModel model = (DefaultComboBoxModel) cboSubjectList.getModel();
            model.removeAllElements();
            if (check) {
                model.addElement("Toán");
                model.addElement("Vật Lý");
                model.addElement("Hóa Học");
                model.addElement("Sinh Học");
                model.addElement("Ngữ Văn");
                model.addElement("Lịch Sử");
                model.addElement("Địa Lý");
                model.addElement("Giáo Dục Công Dân");
                model.addElement("Tiếng Anh");
            }
            else {
                model.addElement("Toán");
                model.addElement("Vật Lý");
                model.addElement("Hóa Học");
                model.addElement("Sinh Học");
                model.addElement("Lịch Sử");
                model.addElement("Địa Lý");
                model.addElement("Giáo Dục Công Dân");
                model.addElement("Tiếng Anh");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillCboLesson () {
        try {
            DefaultComboBoxModel model = (DefaultComboBoxModel) cboLesson.getModel();
            model.removeAllElements();
            String subject = String.valueOf(cboSubject.getSelectedItem());
            Integer grade = (Integer) cboGrade.getSelectedItem();
            if (subject != null && grade != null) {
                List<Lesson> list = lDao.selectBySubjectAndGrade(subject, grade);
                if (list != null) {
                    for (Lesson lesson : list) {
                        model.addElement(lesson);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillCboGrade () {
        try {
            DefaultComboBoxModel model = (DefaultComboBoxModel) cboGrade.getModel();
            model.removeAllElements();
            String subject = (String) cboSubject.getSelectedItem();
            List<Object> list = lDao.selectGradeBySubject(subject);
            if (list != null) {
                for (Object grade : list) {
                    model.addElement(grade);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillTblQuestion (boolean check) {
        if (check) {
            lEntity = (Lesson) cboLesson.getSelectedItem();
            if (lEntity == null) {
                lEntity = new Lesson();
            }
            List<Question> qList = qDAO.selectByLessonID(lEntity.getLessonID());
            DefaultTableModel model = (DefaultTableModel) tblQuestion.getModel();
            model.setRowCount(0);
            if (qList != null) {
                for (int i = 0; i < qList.size(); i++) {
                    Question entity = qList.get(i);
                    Object[] row = {
                        i + 1,
                        entity.getQuestionID(),
                        entity.getQuestion(),
                        entity.getAns()
                    };
                    model.addRow(row);
                }
            }
        }
        else {
            List<Question> qList = qDAO.selectByQuestion(search);
            DefaultTableModel model = (DefaultTableModel) tblQuestion.getModel();
            model.setRowCount(0);
            if (qList != null) {
                for (int i = 0; i < qList.size(); i++) {
                    Question entity = qList.get(i);
                    Object[] row = {
                        i + 1,
                        entity.getQuestionID(),
                        entity.getQuestion(),
                        entity.getAns()
                    };
                    model.addRow(row);
                }
            }
        }
    }

    private void fillTblQuestionOfTest () {
        DefaultTableModel model = (DefaultTableModel) tblQuestionList.getModel();
        model.setRowCount(0);
        for (int i = 0; i < qotList.size(); i++) {
            QuestionOfTest entity = qotList.get(i);
            Object[] row = {
                i + 1,
                entity.getQuestionID()
            };
            model.addRow(row);
        }
    }

    private void fillTblTestList (String testTitle) {
        DefaultTableModel model = (DefaultTableModel) tblGridView.getModel();
        model.setRowCount(0);
        List<Test> testList = null;
        if (testTitle.isBlank()) {
            testList = tDao.selectBySubjectAndTime((String) cboSubjectList.getSelectedItem(), timeTest);
        }
        else {
            testList = tDao.selectBtTestTitleAndSubjectAndTime(testTitle, (String) cboSubjectList.getSelectedItem(), timeTest);
        }
        if (testList != null) {
            for (int i = 0; i < testList.size(); i++) {
                Test get = testList.get(i);
                List<QuestionOfTest> questionOfTestList = qotDAO.selectByTestId(get.getTestID());
                Integer numberOfQuests = questionOfTestList.size();
                Teacher teacher = new TeacherDAO().selectById(get.getTeacherID());
                model.addRow(new Object[]{i + 1, get.getTestID(), get.getTestTitle(), get.getTimeTest(), get.getCreateDate(), teacher.getFullname(), numberOfQuests});
            }
        }
    }

    private void insertQuestionOfTest () {
        for (QuestionOfTest entity : qotList) {
            qotDAO.insert(entity);
        }
    }

    private void setTestIDForQOT () {
        for (QuestionOfTest entity : qotList) {
            String ID = txtTestID.getText();
            entity.setTestID(ID);
        }
    }

    private void addQOT () {
        index = tblQuestion.getSelectedRow();
        int questionID = (int) tblQuestion.getValueAt(index, 1);
        QuestionOfTest entity = new QuestionOfTest();
        entity.setQuestionID(questionID);
        entity.setTestID(testID);
        qotList.add(entity);
        fillTblQuestionOfTest();
    }

    private void deleteQOT () {
        index = tblQuestionList.getSelectedRow();
        qotList.remove(index);
        fillTblQuestionOfTest();
    }

    private void clearForm () {
//        txtTestID.setText("");
//        txtTitleTest.setText("");
//        txtSearch.setText("");
//        cboTestType.setSelectedIndex(0);
//        cboSubject.setSelectedIndex(0);
        index = -1;
        row = -1;
        setForm(new Test());
        btnEdit.setEnabled(false);
        btnInsert.setEnabled(true);
    }

    private void edit() {
        Test test  = tDao.selectById((String) tblGridView.getValueAt(this.row, 2));
        String teacherID = test.getTestID();
        if (Auth.user.getUserID().equals(teacherID)) {
            btnDelete.setEnabled(true);
            btnUpdate.setEnabled(true);
            btnInsert.setEnabled(false);
        } else {
            MsgBox.alert(this, "Bạn không có quyền được chỉnh sửa tài liệu này!");
            return;
        }
        
    }

    private void insertTest () {
        Test tEntity = getForm();
        if (tEntity == null) {
            MsgBox.alert(this, "Vui lòng điền đầy đủ thông tin");
        }
        else {
            try {
                tDao.insert(tEntity);
                setTestIDForQOT();
                insertQuestionOfTest();
                MsgBox.alert(this, "Tạo bài thi thành công");
                fillTblQuestionOfTest();
                this.clearForm();
            } catch (Exception e) {
                MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
            }
        }
    }

    private void deleteTest () {
        String testID = txtTestID.getText();
        try {
            qotDAO.deleteByTestID(testID);
            tDao.delete(testID);
            this.clearForm();
            MsgBox.alert(this, "Xóa bài thi thành công");
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }

    private void updateTest () {
        setValue();
        setTime(true);
        Test tEntity = new Test();
        tEntity.setTestTitle(testID);
        tEntity.setTimeTest(timeTest);
        tEntity.setLesson(subject);
        tEntity.setGrade(grade);
        tEntity.setTeacherID(testID);
        try {
            tDao.update(tEntity);
            MsgBox.alert(this, "Cập nhật bài thi thành công");
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }
    
    private void first() {
        this.row = 0;
        this.fillToForm();
    }

    private void prev() {
        if (this.row > 0) {
            this.row--;
            this.fillToForm();
        }
    }

    private void next() {
        if (this.row < tblGridView.getRowCount() - 1) {
            this.row++;
            this.fillToForm();
        }
    }

    private void last() {
        this.row = tblGridView.getRowCount() - 1;
        this.fillToForm();
    }

    private void cboLessonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLessonActionPerformed
        fillTblQuestion(true);
    }//GEN-LAST:event_cboLessonActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        setValue();
        fillTblQuestion(false);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        clearForm();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSearchListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchListActionPerformed
        // TODO add your handling code here:
        fillTblTestList(txtSearchList.getText());
    }//GEN-LAST:event_btnSearchListActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void txtTitleTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTitleTestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTitleTestActionPerformed

    private void txtTestIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTestIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTestIDActionPerformed

    private void cboTestTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTestTypeActionPerformed
        // TODO add your handling code here:
        String testType = (String) cboTestType.getSelectedItem();
        switch (testType) {
            case "15 Phút","45 Phút","60 Phút" -> {
                fillCboSubject(true);
            }
            case "THPTQG" -> {
                fillCboSubject(false);
            }
            default ->
                throw new AssertionError();
        }
    }//GEN-LAST:event_cboTestTypeActionPerformed

    private void btnAddQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddQuestionActionPerformed
        addQOT();
    }//GEN-LAST:event_btnAddQuestionActionPerformed

    private void cboGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboGradeActionPerformed

        fillCboLesson();

    }//GEN-LAST:event_cboGradeActionPerformed

    private void cboLessonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboLessonItemStateChanged

    }//GEN-LAST:event_cboLessonItemStateChanged

    private void btnDeleteQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteQuestionActionPerformed
        deleteQOT();
    }//GEN-LAST:event_btnDeleteQuestionActionPerformed

    private void cboSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSubjectActionPerformed
        fillCboGrade();

    }//GEN-LAST:event_cboSubjectActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        edit();
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        insertTest();
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        deleteTest();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        updateTest();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void cboTestTypeListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTestTypeListItemStateChanged
        String testType = (String) cboTestTypeList.getSelectedItem();
        switch (testType) {
            case "15 Phút","45 Phút","60 Phút" -> {
                fillCboSubjectList(false);
            }
            case "THPTQG" -> {
                fillCboSubjectList(false);
            }
            default ->
                throw new AssertionError();
        }
        setTime(false);
    }//GEN-LAST:event_cboTestTypeListItemStateChanged

    private void cboSubjectListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboSubjectListItemStateChanged

    }//GEN-LAST:event_cboSubjectListItemStateChanged

    private void cboTestTypeListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTestTypeListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboTestTypeListActionPerformed

    private void cboSubjectListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSubjectListActionPerformed
        // TODO add your handling code here:
        setTime(false);
        fillTblTestList("");
    }//GEN-LAST:event_cboSubjectListActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void cboTestTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTestTypeItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_cboTestTypeItemStateChanged

    private void tblGridViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGridViewMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            tabs.setSelectedIndex(0);
            setValue();
            setTime(false);
            this.row = tblGridView.rowAtPoint(evt.getPoint()); //lấy vị trí dòng được chọn
            if (this.row >= 0) {
                //this.edit();
                tabs.setSelectedIndex(0);
                this.fillToForm();
            }
        }
    }//GEN-LAST:event_tblGridViewMouseClicked

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        // TODO add your handling code here:
        prev();
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        Login.main.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnPersonalInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPersonalInfoActionPerformed
        PersonalInfoTeacher window = new PersonalInfoTeacher(this, true);
        window.setVisible(true);
    }//GEN-LAST:event_btnPersonalInfoActionPerformed

    private void btnLesson1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLesson1ActionPerformed
        LessonsTeacher window = new LessonsTeacher(this);
        window.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnLesson1ActionPerformed

    private void btnTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestActionPerformed
        TestManagement window = new TestManagement(this);
        window.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnTestActionPerformed

    private void btnStatisticActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatisticActionPerformed
        StatisticTeacher window = new StatisticTeacher(this);
        window.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnStatisticActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        window.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        Auth.user = null;
        Login window = new Login();
        window.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main (String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run () {
                new TestManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddQuestion;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeleteQuestion;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnLesson1;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPersonalInfo;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearchList;
    private javax.swing.JButton btnStatistic;
    private javax.swing.JButton btnTest;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cboGrade;
    private javax.swing.JComboBox<String> cboLesson;
    private javax.swing.JComboBox<String> cboSubject;
    private javax.swing.JComboBox<String> cboSubjectList;
    private javax.swing.JComboBox<String> cboTestType;
    private javax.swing.JComboBox<String> cboTestTypeList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToolBar jToolBar;
    private javax.swing.JLabel lblAdvancedSearch;
    private javax.swing.JLabel lblGrade;
    private javax.swing.JLabel lblLesson;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblQuestionList;
    private javax.swing.JLabel lblSubject;
    private javax.swing.JLabel lblSubjectList;
    private javax.swing.JLabel lblTestType;
    private javax.swing.JLabel lblTestType1;
    private javax.swing.JLabel lblTestTypeList;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTitleTest;
    private javax.swing.JPanel pnlAdvancedSearch;
    private javax.swing.JPanel pnlBackground;
    private javax.swing.JPanel pnlList;
    private javax.swing.JPanel pnlManage;
    private javax.swing.JPanel pnlQuestionList;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblGridView;
    private javax.swing.JTable tblQuestion;
    private javax.swing.JTable tblQuestionList;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSearchList;
    private javax.swing.JTextField txtTestID;
    private javax.swing.JTextField txtTitleTest;
    // End of variables declaration//GEN-END:variables

}
